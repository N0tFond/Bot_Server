const { SlashCommandBuilder } = require('discord.js');

module.exports = {
    // D√©finition de la commande slash
    data: new SlashCommandBuilder()
        .setName('verify')
        .setDescription('Permet de se v√©rifier et obtenir un r√¥le sur le serveur'),

    // Ex√©cution de la commande
    async execute(interaction) {
        try {
            // V√©rifier les permissions du bot
            if (!interaction.guild.members.me.permissions.has('ManageRoles')) {
                return await interaction.reply({
                    content: "‚ùå Le bot n'a pas la permission de g√©rer les r√¥les. Veuillez v√©rifier les permissions.",
                    ephemeral: true
                });
            }

            // ID du r√¥le √† attribuer
            const roleId = '1367978096166178897';
            // ID du r√¥le non v√©rifi√© √† supprimer
            const unverifiedRoleId = '1367978118685659267';

            // R√©cup√©rer les r√¥les
            const role = interaction.guild.roles.cache.get(roleId);
            const unverifiedRole = interaction.guild.roles.cache.get(unverifiedRoleId);

            // V√©rifier si les r√¥les existent
            if (!role) {
                return await interaction.reply({
                    content: "‚ö†Ô∏è Le r√¥le de v√©rification n'a pas √©t√© trouv√©. Veuillez contacter un administrateur.",
                    ephemeral: true
                });
            }
            if (!unverifiedRole) {
                console.log(`R√¥le non v√©rifi√© avec l'ID ${unverifiedRoleId} introuvable.`);
                return await interaction.reply({
                    content: "‚ö†Ô∏è Le r√¥le non v√©rifi√© n'a pas √©t√© trouv√©. Veuillez contacter un administrateur.",
                    ephemeral: true
                });
            }

            // V√©rifier la hi√©rarchie des r√¥les
            if (unverifiedRole.position > interaction.guild.members.me.roles.highest.position) {
                return await interaction.reply({
                    content: "‚ùå Le bot ne peut pas supprimer le r√¥le non v√©rifi√© car il est plus haut dans la hi√©rarchie.",
                    ephemeral: true
                });
            }

            // V√©rifier si l'utilisateur a d√©j√† le r√¥le v√©rifi√©
            if (interaction.member.roles.cache.has(roleId)) {
                return await interaction.reply({
                    content: "‚úÖ Vous √™tes d√©j√† v√©rifi√©(e) sur ce serveur!",
                    ephemeral: true
                });
            }

            // Attribuer le r√¥le v√©rifi√©
            await interaction.member.roles.add(role);

            // Supprimer le r√¥le non v√©rifi√© si l'utilisateur l'a
            const member = await interaction.guild.members.fetch(interaction.user.id); // Rafra√Æchir les donn√©es du membre
            if (member.roles.cache.has(unverifiedRoleId)) {
                try {
                    await member.roles.remove(unverifiedRole);
                    console.log(`R√¥le non v√©rifi√© supprim√© pour ${interaction.user.tag}`);
                } catch (error) {
                    console.error('Erreur lors de la suppression du r√¥le non v√©rifi√©:', error);
                    await interaction.reply({
                        content: "‚ùå Une erreur s'est produite lors de la suppression du r√¥le non v√©rifi√©.",
                        ephemeral: true
                    });
                }
            } else {
                console.log(`L'utilisateur ${interaction.user.tag} n'avait pas le r√¥le non v√©rifi√©.`);
            }

            // R√©pondre √† l'utilisateur
            await interaction.reply({
                content: `‚úÖ F√©licitations! Vous avez √©t√© v√©rifi√©(e) et avez re√ßu le r√¥le **${role.name}**!`,
                ephemeral: true
            });

            // Log dans un canal de logs
            const logChannelId = '1367978187438424125';
            const logChannel = interaction.guild.channels.cache.get(logChannelId);
            if (logChannel) {
                logChannel.send(`üìù L'utilisateur **${interaction.user.tag}** s'est v√©rifi√© et a re√ßu le r√¥le **${role.name}**.`);
            }

        } catch (error) {
            console.error('Erreur lors de la v√©rification:', error);
            await interaction.reply({
                content: "‚ùå Une erreur s'est produite lors de la v√©rification. Veuillez r√©essayer plus tard ou contacter un administrateur.",
                ephemeral: true
            });
        }
    },
};